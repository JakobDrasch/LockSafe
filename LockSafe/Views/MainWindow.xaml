<Window x:Name="WinMain" x:Class="LockSafe.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LockSafe"
        mc:Ignorable="d"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        Title="Lock Safe" Height="630" Width="991" WindowStartupLocation="CenterScreen" MinWidth="951" MinHeight="577" ResizeMode="CanResizeWithGrip" MouseLeftButtonDown="WinMain_MouseLeftButtonDown">
    <Window.Resources>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#F5F5F5"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#F5F5F5"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#F5F5F5"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#F5F5F5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="NoHoverButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource BackgroundColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="false">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="false">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CustomToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Border x:Name="Border" CornerRadius="10" Background="#FFFFFFFF" Width="40" Height="20">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0.5" Direction="0" Opacity="0.3" />
                                </Border.Effect>
                                <Ellipse x:Name="Ellipse" Fill="#FFFFFFFF" Stretch="Uniform" Margin="2 1 2 1" Stroke="Gray" StrokeThickness="0.2" HorizontalAlignment="Stretch">
                                    <Ellipse.Effect>
                                        <DropShadowEffect BlurRadius="10" ShadowDepth="1" Opacity="0.3" Direction="260" />
                                    </Ellipse.Effect>
                                </Ellipse>
                            </Border>

                            <!-- VisualStateManager innerhalb des Grids -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <!-- Zustand für Checked -->
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#2B6CB0" Duration="0:0:0.3" />
                                            <ThicknessAnimation Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Margin" To="20 1 2 1" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </VisualState>

                                    <!-- Zustand für Unchecked -->
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="White" Duration="0:0:0.3" />
                                            <ThicknessAnimation Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Margin" To="2 1 2 1" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="SliderThumbStyle" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="false"/>
            <Setter Property="Height" Value="18"/>
            <Setter Property="Width" Value="18"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Ellipse  Stroke="Black"
                          StrokeThickness="1"
                          Name="Ellipse" 
                          Fill="{StaticResource LogoColor}" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Ellipse" Property="Fill" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Slider" x:Key="AppSliderStyle">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Slider">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" Name="row" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" Name="column" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <Border Name="PART_Border"
                           BorderBrush="Black" BorderThickness="1"
                           CornerRadius="2"
                           Padding="2"
                          Grid.Row="1" Grid.Column="1"
                           Width="{TemplateBinding Width}"
                           Height="{TemplateBinding Height}"
                           Background="{StaticResource SecondaryColor}"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Center" />
                            <Track Name="PART_Track"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Center"
                              Grid.Row="1" Grid.Column="1"
                              Width="{TemplateBinding Width}"
                              Height="{TemplateBinding Height}">
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Popup x:Name="NotificationPopup"
               Placement="Bottom"
               PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType=Window}}" 
               IsOpen="False"
               StaysOpen="True"
               HorizontalOffset="0"                       
               VerticalOffset="-55" 
               AllowsTransparency="True"
               PopupAnimation="Fade"
               Opacity="0">
            <!-- Adjust this value for vertical positioning -->
            <Border Background="{StaticResource SecondaryColor}" 
                    Padding="10" 
                    CornerRadius="20"
                    BorderBrush="{StaticResource LogoColor}" 
                    BorderThickness="1">
                <TextBlock x:Name="NotificationText" 
                           Text="This is a notification" 
                           FontSize="14"
                           Foreground="{StaticResource FontColor}"
                           HorizontalAlignment="Center" 
                           VerticalAlignment="Center"/>
            </Border>
        </Popup>

        <Grid x:Name="MainGrid" Background="{StaticResource BackgroundColor}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40*"></ColumnDefinition>
                <ColumnDefinition Width="60*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>

            <Button Style="{DynamicResource NoHoverButtonStyle}" x:Name="BtnExit" Grid.Column="1"  Grid.Row="0" Content="✖"  
            HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,15,15,0" 
            Foreground="{StaticResource SecondaryColor}" Padding="0,0,0,0" UseLayoutRounding="False" FontFamily="Microsoft Sans Serif" 
            FontSize="14" BorderThickness="0,0,0,0" Cursor="Hand" Click="BtnExit_Click">
            </Button>
            <Button Style="{DynamicResource NoHoverButtonStyle}" x:Name="BtnMinimize" Grid.Column="1" Grid.Row="0" Content="➖" 
            HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,15,74,0" Foreground="{StaticResource SecondaryColor}" 
            Padding="0,0,0,0" UseLayoutRounding="False" FontFamily="Microsoft Sans Serif" FontSize="14" BorderThickness="0,0,0,0" 
            Cursor="Hand" Click="BtnMinimize_Click">
            </Button>
            <Button Style="{DynamicResource NoHoverButtonStyle}" x:Name="BtnMaximize" Grid.Column="1"  Grid.Row="0" Content="🗖" 
            HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,14,46,0" Foreground="{StaticResource SecondaryColor}" 
            Padding="0,0,0,0" UseLayoutRounding="False" FontFamily="Microsoft Sans Serif" FontSize="14" BorderThickness="0,0,0,0" 
            Cursor="Hand" FontWeight="Bold" Click="BtnMaximize_Click">
            </Button>

            <Image Source="pack://application:,,,/Images/LockSafeLogo.png" Grid.Column="0" Grid.Row="1"></Image>

            <Grid Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" Margin="25 0 25 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <TextBlock x:Name="TbHeading" Grid.Row="0" Text="Generate Password" FontFamily="Poppins" FontSize="42" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="{DynamicResource SecondaryColor}" FontWeight="Bold" Margin="0 0 0 15"></TextBlock>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" HorizontalAlignment="Left" Content="Password" FontFamily="Poppins" FontSize="12" Foreground="{StaticResource LogoColor}" ></Label>

                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Label HorizontalAlignment="Right" Content="Time to crack:" FontFamily="Poppins" FontSize="12" Foreground="{StaticResource LogoColor}" ></Label>
                        <Label x:Name="LblCrackTime" HorizontalAlignment="Right" Margin="0 0 3 0" Content="{Binding CrackTimeText}" FontFamily="Poppins" FontSize="12" FontWeight="Bold" Foreground="{StaticResource LogoColor}" ></Label>
                    </StackPanel>
                </Grid>
                <!-- Grid mit 2 Column für row1 links password text rechts zeit zum knacken und sicherheit hoch/mittel/schwach englisch chatgpt für algorithmus. farbe daruntter green orange red -->
                <Border Grid.Row="2" CornerRadius="15" BorderBrush="{Binding PasswordStrengthColor}" BorderThickness="0 0 0 4" Margin="0 0 0 15" Background="{StaticResource MainColor}">
                    <Grid Margin="30 0 25 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <RichTextBox x:Name="RTbPassword" 
                            IsReadOnly="True" 
                            Padding="0 5 0 5"
                            Margin="0 0 20 0"
                            BorderThickness="0"
                            Background="Transparent"
                            FontFamily="Poppins"
                            FontSize="18"                                
                            VerticalScrollBarVisibility="Hidden"
                            HorizontalScrollBarVisibility="Hidden" >
                            <FlowDocument >
                                <Paragraph>
                                    <InlineUIContainer>
                                        <ItemsControl ItemsSource="{Binding FormattedPassword}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Horizontal" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap">
                                                <Run Text="{Binding Text}" Foreground="{Binding Foreground}" FontSize="18" FontFamily="Poppins" />
                                                    </TextBlock>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </InlineUIContainer>
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>

                        <Button Style="{DynamicResource NoHoverButtonStyle}" x:Name="BtnGenerate" Grid.Column="1" Content="🗘" 
                    HorizontalAlignment="Left" VerticalAlignment="Center" Background="{StaticResource MainColor}"  
                    Foreground="{StaticResource SecondaryColor}" Margin="0 0 7 0" BorderThickness="0,0,0,0" 
                    Padding="0,0,0,0" UseLayoutRounding="False" FontFamily="Microsoft Sans Serif" FontSize="24"
                    Cursor="Hand" FontWeight="Bold" Click="BtnGenerate_Click" ToolTip="Generate again">
                        </Button>

                        <Button Style="{DynamicResource NoHoverButtonStyle}" x:Name="BtnCopy" Grid.Column="2" Content="📋" 
                    HorizontalAlignment="Left" VerticalAlignment="Center" Background="{StaticResource MainColor}"  
                    Foreground="{StaticResource SecondaryColor}" Margin="0 0 0 0" BorderThickness="0,0,0,0" 
                    Padding="0,0,0,0" UseLayoutRounding="False" FontFamily="Microsoft Sans Serif" FontSize="17.3"
                    Cursor="Hand" FontWeight="Bold" Click="BtnCopy_Click" ToolTip="Copy password">
                        </Button>

                    </Grid>
                </Border>


                <Label Grid.Row="3" FontFamily="Poppins" FontSize="12" Foreground="{StaticResource LogoColor}">
                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding StringFormat="Length {0}">
                                <Binding Path="PasswordLength" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Label>

                <Border Grid.Row="4" CornerRadius="15" Margin="0 0 0 15" Background="{StaticResource MainColor}">
                    <Grid Margin="30 10 30 10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="4" VerticalAlignment="Center" Margin="0 0 10 0" FontFamily="Poppins" FontSize="12" Foreground="{StaticResource LogoColor}"/>

                        <Slider 
                    Grid.Column="1"
                    Minimum="4"
                    Maximum="64"                   
                    IsSnapToTickEnabled="True"
                    IsSelectionRangeEnabled="True"
                    VerticalAlignment="Center"
                    Style="{StaticResource AppSliderStyle}"
                    Value="{Binding PasswordLength}"/>

                        <TextBlock Text="64" Grid.Column="2" VerticalAlignment="Center" Margin="10 0 0 0" FontFamily="Poppins" FontSize="12" Foreground="{StaticResource LogoColor}" />
                    </Grid>
                </Border>


                <Label Grid.Row="5" Content="Settings" FontFamily="Poppins" FontSize="12" Foreground="{StaticResource LogoColor}" ></Label>
                <Border Grid.Row="6" CornerRadius="15" Margin="0 0 0 15" Background="{StaticResource MainColor}">

                    <Grid HorizontalAlignment="Stretch" Margin="30 0 30 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*"></ColumnDefinition>
                            <ColumnDefinition Width="50*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <TextBlock
                    x:Name="TbSettingNumbers"
                    Grid.Column="0"
                    Text="Include Numbers" 
                    FontFamily="Poppins" 
                    FontSize="16" 
                    HorizontalAlignment="Left"
                    Foreground="{StaticResource FontColor}"
                    Padding="0 5 0 5">

                        </TextBlock>

                        <ToggleButton 
                    x:Name="TogBtnSettingNumbers"
                    Grid.Column="1"
                    Content="Toggle"  
                    Width="45"
                    Margin="20 5 0 5"
                    HorizontalAlignment="Right"
                    Style="{StaticResource CustomToggleButton}"
                    IsChecked="{Binding IncludeNumbers}"
                    >

                        </ToggleButton>
                    </Grid>
                </Border>

                <Border Grid.Row="7" CornerRadius="15" Margin="0 0 0 15" Background="{StaticResource MainColor}">

                    <Grid HorizontalAlignment="Stretch" Margin="30 0 30 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*"></ColumnDefinition>
                            <ColumnDefinition Width="50*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <TextBlock
                    x:Name="TbSettingLetters"
                    Grid.Column="0"
                    Text="Include Letters" 
                    FontFamily="Poppins" 
                    FontSize="16" 
                    HorizontalAlignment="Left" 
                    Foreground="{StaticResource FontColor}"
                    Padding="0 5 0 5">

                        </TextBlock>

                        <ToggleButton 
                    x:Name="TogBtnSetting"
                    Grid.Column="1"
                    Content="Toggle"  
                    Width="45"
                    HorizontalAlignment="Right"
                    Margin="20 5 0 5"
                    Style="{StaticResource CustomToggleButton}"
                    IsChecked="{Binding IncludeLetters}">

                        </ToggleButton>
                    </Grid>
                </Border>

                <Border Grid.Row="8" CornerRadius="15" Margin="0 0 0 15" Background="{StaticResource MainColor}">

                    <Grid HorizontalAlignment="Stretch" Margin="30 0 30 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*"></ColumnDefinition>
                            <ColumnDefinition Width="50*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <TextBlock
                    x:Name="TbSettingUpperCase"
                    Grid.Column="0"
                    Text="Include Upper Case Letters" 
                    FontFamily="Poppins" 
                    FontSize="16" 
                    HorizontalAlignment="Left" 
                    Foreground="{StaticResource FontColor}"
                    Padding="0 5 0 5">

                        </TextBlock>

                        <ToggleButton 
                    x:Name="TogBtnUpperCase"
                    Grid.Column="1"
                    Content="Toggle"  
                    Width="45"
                    HorizontalAlignment="Right"
                    Margin="20 5 0 5"
                    Style="{StaticResource CustomToggleButton}"
                    IsChecked="{Binding IncludeUpperCase}" >

                        </ToggleButton>
                    </Grid>
                </Border>

                <Border Grid.Row="9" CornerRadius="15" Margin="0 0 0 15" Background="{StaticResource MainColor}">

                    <Grid HorizontalAlignment="Stretch" Margin="30 0 30 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*"></ColumnDefinition>
                            <ColumnDefinition Width="50*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <TextBlock
                    x:Name="TbSettingSpecialCharacters"
                    Grid.Column="0"
                    Text="Include Special Characters" 
                    FontFamily="Poppins" 
                    FontSize="16" 
                    HorizontalAlignment="Left" 
                    Foreground="{StaticResource FontColor}"
                    Padding="0 5 0 5">

                        </TextBlock>

                        <ToggleButton 
                    x:Name="TogBtnSpecialCharacters"
                    Grid.Column="1"
                    Content="Toggle"  
                    Width="45"
                    HorizontalAlignment="Right"
                    Margin="20 5 0 5"
                    Style="{StaticResource CustomToggleButton}"
                    IsChecked="{Binding IncludeSpecialCharacters}">

                        </ToggleButton>
                    </Grid>
                </Border>

            </Grid>

        </Grid>

    </Grid>
</Window>
